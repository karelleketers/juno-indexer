# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

type Token @entity {
  id: ID!

  #Bytes
  """ Token address """
  address: String! @index(unique: true)

  """ Number of decimals the token uses """
  decimals: Int!

  """ Human-readable name of the token """
  name: String!

  """ Symbol of the token """
  symbol: String!

  #Bytes
  """ Address of source account """
  source: String!

  #""" Token description """
  #description: String

  #""" Image URL """
  #imageUrl: String

  #""" Token flags """
  #flags: [String!]!

  #BigInt
  """ Total number of transfer events """
  transferEventCount: Int!

  #TODO: BigDecimal Custom Scalar
  """ Total token supply """
  totalSupply: String!

  #TODO: BigDecimal Custom Scalar
  """ Total token transferred """
  totalTransferred: String!

  #""" List of token events """
  #events: [TokenEvent!]! @derivedFrom(field: "token")
}


type TransferEvent @entity {
  id: ID!

  """ Token Address """
  token: Token!

  #TODO: BigDecimal Custom Scalar
  """ Quantity of tokens transferred """
  amount: String!

  #Bytes
  """ Transaction sender address """
  sender: String!

  #Bytes
  """ Address of destination account"""
  destination: String!

  #BigInt
  """ Block number/ Block Height """
  block: Int!

  #BigInt
  """ Event timestamp """
  timestamp: String!

  #Bytes
  """ Transaction hash """
  transaction: String!
  
}

#
# Provides information about an Cosmos account
#
type Account @entity {
  """ Equals to: <accountAddress>"""
  id: ID!

  #Bytes
  " Account address "
  address: String!

  """ Token balances that this account holds """
  balances: [AccountBalance!]! @derivedFrom(field: "account")
}

#
# Current token balance of a particular Cosmos account
#
type AccountBalance @entity {
  """ Equals to: <accountAddress>-<tokenAddress>"""
  id: ID!

  """ Account address """
  account: Account!

  """ Token address """
  token: Token!

  #BigDecimal
  """ Current account balance """
  amount: String!

  #BigInt
  """ Block number in which the balance was last modified """
  block: Int

  #BigInt
  """ Last modified timestamp in seconds """
  modified: String

  #Bytes
  """ Hash of the last transaction that modified the balance """
  transaction: String
}

#
# Token balance of a particular Ethereum account in a certain timestamp. This entity is used to
# provide information about evolution of account balances
#
type AccountBalanceSnapshot @entity {
  """ Equals to: <accountAddress>-<tokenAddress>-<timestamp>"""
  id: ID!

  """ Account address """
  account: Account!

  """ Token addess """
  token: Token!

  #BigDecimal
  """ Account balance """
  amount: String!

  # TODO: Add description and check if could be non-optional
  event: TransferEvent

  #BigInt
  """ Block number """
  block: Int!

  #BigInt
  """ Timestamp in seconds """
  timestamp: String!

  #Bytes
  """ Transaction hash """
  transaction: String!
}